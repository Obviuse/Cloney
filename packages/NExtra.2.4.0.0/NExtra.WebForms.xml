<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NExtra.WebForms</name>
    </assembly>
    <members>
        <member name="T:NExtra.WebForms.WebControls.UserControlPlaceHolder">
            <summary>
            This class can be used to dynamically load and unload user
            controls to and from the page. All dynamically loaded user
            controls are automatically reloaded at postback.
            
            If you want to apply events to dynamically loaded controls,
            you must do so in Page_Load.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.WebForms.WebControls.UserControlPlaceHolder.LoadViewState(System.Object)">
            <summary>
            Override LoadViewState to makes sure that all dynamically loaded
            controls are properly reloaded after each postback.
            </summary>
            <param name="savedState">The saved state.</param>
        </member>
        <member name="M:NExtra.WebForms.WebControls.UserControlPlaceHolder.GetControl(System.String)">
            <summary>
            Retrieve a control that has been added to the place holder.
            </summary>
            <param name="controlId">The ID of the control to retrieve.</param>
            <returns>The control instane; null if none could be found.</returns>
        </member>
        <member name="M:NExtra.WebForms.WebControls.UserControlPlaceHolder.GetControl``1(System.String)">
            <summary>
            Retrieve a control that has been added to the place holder.
            </summary>
            <typeparam name="T">The control type.</typeparam>
            <param name="controlId">The ID of the control to retrieve.</param>
            <returns>The control instane; null if none could be found.</returns>
        </member>
        <member name="M:NExtra.WebForms.WebControls.UserControlPlaceHolder.LoadControl(System.String,System.String)">
            <summary>
            Dynamically load any user control to the place holder. If the
            control is already added, it will not be loaded a second time.
            </summary>
            <param name="controlId">The unique control ID.</param>
            <param name="controlUrl">The path to the user control source file.</param>
            <returns>The loaded control.</returns>
        </member>
        <member name="M:NExtra.WebForms.WebControls.UserControlPlaceHolder.LoadControl``1(System.String,System.String)">
            <summary>
            Dynamically load any user control to the place holder. If the
            control is already added, it will not be loaded a second time.
            </summary>
            <typeparam name="T">The control type.</typeparam>
            <param name="controlId">The unique control ID.</param>
            <param name="controlUrl">The URL to the user control source file.</param>
            <returns>The loaded control.</returns>
        </member>
        <member name="M:NExtra.WebForms.WebControls.UserControlPlaceHolder.UnloadControl(System.String)">
            <summary>Unload a previously loaded user control.</summary>
            <param name="controlId">The ID of the control to unload.</param>
        </member>
        <member name="P:NExtra.WebForms.WebControls.UserControlPlaceHolder.LoadedControls">
            <summary>
            A comma-separated string with the IDs of the user controls that
            have been added to the place holder.
            </summary>
        </member>
        <member name="T:NExtra.WebForms.JavaScript">
            <summary>
            The JavaScript class defines certain scripts that can be used
            server-side. The Scripts are properly registered and can thus 
            be used in asynchronous postbacks.
            
            The class randomizes the script IDs, which means that scripts
            can be added several times without overwriting eachother.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.WebForms.JavaScript.Alert(System.String)">
            <summary>
            Alert a message in an alert box.
            </summary>
            <param name="message">The message to alert.</param>
        </member>
        <member name="M:NExtra.WebForms.JavaScript.Redirect(System.String)">
            <summary>
            Redirect the client to a certain page.
            </summary>
            <param name="url">The url to redirect the client to.</param>
        </member>
        <member name="P:NExtra.WebForms.JavaScript.CurrentPage">
            <summary>
            Get the currently executing page, if any.
            </summary>
            <returns>The currently executing page.</returns>
        </member>
        <member name="T:NExtra.WebForms.WebControls.SubmittableUserControl">
            <summary>
            This class represents a UserControl that can be posted.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.WebForms.WebControls.SubmittableUserControl.OnCancel(System.EventArgs)">
            <summary>
            Trigger the Cancel event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NExtra.WebForms.WebControls.SubmittableUserControl.OnSubmit(System.EventArgs)">
            <summary>
            Trigger the Submit event.
            </summary>
            <param name="e">Submit arguments.</param>
        </member>
        <member name="E:NExtra.WebForms.WebControls.SubmittableUserControl.Cancel">
            <summary>
             This event is trigged when a control submit cancels.
            </summary>
        </member>
        <member name="E:NExtra.WebForms.WebControls.SubmittableUserControl.Submit">
            <summary>
             The event that can be trigged when a control submit completes.
            </summary>
        </member>
        <member name="P:NExtra.WebForms.WebControls.SubmittableUserControl.Cancelled">
            <summary>
            Whether or not the latest control submit was cancelled.
            </summary>
        </member>
        <member name="P:NExtra.WebForms.WebControls.SubmittableUserControl.Submitted">
            <summary>
            Whether or not the latest control submit was completed.
            </summary>
        </member>
        <member name="T:NExtra.WebForms.WebControls.NoTableCreateUserWizard">
            <summary>
            This control inherits CreateUserWizard, but does
            not generate any table elements.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.WebForms.WebControls.NoTableCreateUserWizard.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override the base Render method.
            </summary>
        </member>
        <member name="P:NExtra.WebForms.WebControls.NoTableCreateUserWizard.HtmlRemover">
            <summary>
            The ICanRemoveHtml instance that will be used to
            remove the HTML code. If no instance is set, the
            control will automatically use a new HtmlRemover.
            </summary>
        </member>
        <member name="T:NExtra.WebForms.WebControls.IFrame">
            <summary>
            The IFrame class can be used to embed an iframe to the page.
            The class does not support auto scaling of the frame to fit
            the frame content, since it behaved incorrectly in IE. Also,
            adding HTML content to the iframe requires JavaScript.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.WebForms.WebControls.IFrame.OnPreRender(System.EventArgs)">
            <summary>Override OnPreRender to add a Literal to the control collection.</summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NExtra.WebForms.WebControls.IFrame.AppendAttribute(System.Text.StringBuilder,System.String,System.Double)">
            <summary>
            Append a double attribute, which is only appended if the value is greater than zero.
            </summary>
            <param name="sb">StringBuilder instance.</param>
            <param name="format">Attribute format.</param>
            <param name="value">Attribute value.</param>
        </member>
        <member name="M:NExtra.WebForms.WebControls.IFrame.AppendAttribute(System.Text.StringBuilder,System.String,System.Nullable{System.Int32})">
            <summary>
            Append a int? attribute, which is only appended if the value has a value.
            </summary>
            <param name="sb">StringBuilder instance.</param>
            <param name="format">Attribute format.</param>
            <param name="value">Attribute value.</param>
        </member>
        <member name="M:NExtra.WebForms.WebControls.IFrame.AppendAttribute(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Append a string attribute, which is only appended if the value is not null or empty.
            </summary>
            <param name="sb">StringBuilder instance.</param>
            <param name="format">Attribute format.</param>
            <param name="value">Attribute value.</param>
        </member>
        <member name="M:NExtra.WebForms.WebControls.IFrame.AppendScrollingAttribute(System.Text.StringBuilder,System.Nullable{System.Boolean})">
            <summary>
            Append a scrolling attribute, which is either "yes" or "no".
            </summary>
            <param name="sb">StringBuilder instance.</param>
            <param name="value">Attribute value.</param>
        </member>
        <member name="M:NExtra.WebForms.WebControls.IFrame.AppendTransparencyAttribute(System.Text.StringBuilder,System.Nullable{System.Boolean})">
            <summary>
            Append an allowtransparency attribute.
            </summary>
            <param name="sb">StringBuilder instance.</param>
            <param name="value">Attribute value.</param>
        </member>
        <member name="M:NExtra.WebForms.WebControls.IFrame.GetHtml">
            <summary>
            Get the resulting HTML code for the control.
            </summary>
        </member>
        <member name="M:NExtra.WebForms.WebControls.IFrame.GetHtmlScript">
            <summary>
            Get the JavaScript code that is responsible for adding
            any custom Html property value into the iFrame control.
            </summary>
        </member>
        <member name="M:NExtra.WebForms.WebControls.IFrame.GetHtmlScriptHtml">
            <summary>
            Get the adjusted HTML code that is to be added to the iFrame.
            </summary>
        </member>
        <member name="M:NExtra.WebForms.WebControls.IFrame.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override the Render function in order to remove the outer span tag.
            </summary>
            <param name="writer">HtmlTextWriter instance.</param>
        </member>
        <member name="P:NExtra.WebForms.WebControls.IFrame.FrameBorder">
            <summary>
            Get/set the frame border size of the iFrame, if any.
            </summary>
        </member>
        <member name="P:NExtra.WebForms.WebControls.IFrame.Html">
            <summary>
            Get/set the HTML content to load into the iFrame, if any.
            This property is applied with JavaScript, unlike the Src
            ¨property, which is applied directly within the markup.
            </summary>
        </member>
        <member name="P:NExtra.WebForms.WebControls.IFrame.MarginWidth">
            <summary>
            Get/set the horizontal margin of the iFrame content.
            </summary>
        </member>
        <member name="P:NExtra.WebForms.WebControls.IFrame.MarginHeight">
            <summary>
            Get/set the vertical margin of the iFrame content.
            </summary>
        </member>
        <member name="P:NExtra.WebForms.WebControls.IFrame.Scrolling">
            <summary>
            Get/set if the iFrame schould scroll if the content
            size exceeds the iFrame size.
            </summary>
        </member>
        <member name="P:NExtra.WebForms.WebControls.IFrame.Src">
            <summary>
            Get/set the path of the page to load into the iFrame, if any.
            </summary>
        </member>
        <member name="P:NExtra.WebForms.WebControls.IFrame.Style">
            <summary>
            Get/set the style to apply to the iFrame.
            </summary>
        </member>
        <member name="P:NExtra.WebForms.WebControls.IFrame.Transparent">
            <summary>
            Get/set if the iFrame background should be transparent.
            </summary>
        </member>
        <member name="T:NExtra.WebForms.Extensions.ControlExtensions">
            <summary>
            Extension methods for System.Web.UI.Control.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.WebForms.Extensions.ControlExtensions.Html(System.Web.UI.Control)">
            <summary>
            Retrieve the HTML code for a certain control.
            </summary>
            <param name="control">The control of interest.</param>
            <returns>The HTML for the control.</returns>
        </member>
        <member name="T:NExtra.WebForms.Extensions.ListViewDataItemExtensions">
            <summary>
            Extension methods for System.Web.UI.WebControls.ListViewDataItem.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.WebForms.Extensions.ListViewDataItemExtensions.RowCssClass(System.Web.UI.WebControls.ListViewDataItem,System.String,System.String)">
            <summary>
            Get the css class for a ListViewDataItem instance.
            </summary>
            <param name="item">The item instance.</param>
            <param name="oddCssClass">The class to apply to odd rows; default "odd".</param>
            <param name="evenCssClass">The class to apply to even rows; default "even".</param>
            <returns>A string with the correct css class applied.</returns>
        </member>
    </members>
</doc>
