<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NExtra.Mvc</name>
    </assembly>
    <members>
        <member name="T:NExtra.Mvc.Extensions.WebViewPageExtensions">
            <summary>
            Extension methods for System.Web.Mvc.WebViewPage.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.Mvc.Extensions.WebViewPageExtensions.GlobalResource(System.Web.Mvc.WebViewPage,System.String)">
            <summary>
            Format a global resource file value for display.
            </summary>
            <param name="page">The WebViewPage instance that is to display the value.</param>
            <param name="str">The resource file value to format.</param>
            <returns>The formatted result.</returns>
        </member>
        <member name="M:NExtra.Mvc.Extensions.WebViewPageExtensions.LocalResource(System.Web.Mvc.WebViewPage,System.String)">
            <summary>
            Format a local resource file value for display.
            </summary>
            <param name="page">The WebViewPage instance that is to display the value.</param>
            <param name="key">The name of the local resource file value to format.</param>
            <returns>The formatted result.</returns>
        </member>
        <member name="M:NExtra.Mvc.Extensions.WebViewPageExtensions.ResourceString(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Format a resource file value for display.
            </summary>
            <param name="helper">The HtmlHelper instance to use for formatting.</param>
            <param name="str">The resource file value of interest.</param>
            <returns>The formatted result.</returns>
        </member>
        <member name="T:NExtra.Mvc.HtmlHelpers.LocalResourceHelper">
            <summary>
            This helper can be used to work with local resource files.
            
            The helper will automatically adjust resource file values
            for display. For example, line feeds are replaced with br
            tags.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.Mvc.HtmlHelpers.LocalResourceHelper.LocalResource(System.Web.Mvc.HtmlHelper,System.Web.Mvc.WebViewPage,System.String)">
            <summary>
            Adjust a local resource file value for display.
            </summary>
            <param name="helper">HtmlHelper instance.</param>
            <param name="page">The current page instance.</param>
            <param name="key">The resource file key of interest.</param>
            <returns>The HTML formatted result.</returns>
        </member>
        <member name="T:NExtra.Mvc.HtmlHelpers.ResourceStringHelper">
            <summary>
            This helper can be used to convert resource file stings
            to HTML prepared strings. For now, it only replaces new
            lines with br tags.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            
            This class is used by the GlobalResourceHtmlHelper and
            LocalResourceHtmlHelper classes. It should not have to
            be used in any other context. If so, the class will be
            replaced by a public and more general class.
            </remarks>
        </member>
        <member name="M:NExtra.Mvc.HtmlHelpers.ResourceStringHelper.ToHtml(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Format a string for HTML display.
            </summary>
            <param name="helper">HtmlHelper instance.</param>
            <param name="str">The string to format.</param>
            <returns>The HTML formatted result.</returns>
        </member>
        <member name="T:NExtra.Mvc.Testing.ControllerExtensions">
            <summary>
            Test related extension methods for System.Web.Mvc.Controller.
            </summary>
            <remarks>
            Author:         Daniel Saidi [daniel.saidi@gmail.com]
            Link:           http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.Mvc.Testing.ControllerExtensions.CallWithModelValidation``3(``0,System.Func{``0,``1},``2)">
            <summary>
            Use this method to automatically apply model validation,
            when calling actions that require it. By default, model
            validation will not apply, which causes model errors to
            be ignored by unit tests.
            </summary>
            <typeparam name="C">System.Web.Mvc.Controller</typeparam>
            <typeparam name="R">System.Web.Mvc.ActionResult</typeparam>
            <typeparam name="T">class</typeparam>
            <param name="controller">The controller to test.</param>
            <param name="action">The action to execute.</param>
            <param name="model">The model that should be validated.</param>
            <returns>The action result.</returns>
        </member>
        <member name="T:NExtra.Mvc.Extensions.ControllerExtensions">
            <summary>
            Extension methods for System.Web.Mvc.Controller.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.Mvc.Extensions.ControllerExtensions.Action(System.Web.Mvc.Controller)">
            <summary>
            Get the name of the current action for a certain controller.
            </summary>
            <param name="controller">The controller of interest.</param>
            <returns>The name of the current action for the controller.</returns>
        </member>
        <member name="M:NExtra.Mvc.Extensions.ControllerExtensions.Name(System.Web.Mvc.Controller)">
            <summary>
            Get the name of a certain controller.
            </summary>
            <param name="controller">The controller of interest.</param>
            <returns>The name of the controller.</returns>
        </member>
        <member name="T:NExtra.Mvc.HtmlHelpers.FormBlockForHelper">
            <summary>
            This class can be used to generate a form block for a
            model expression. It will embed an editor, such as an
            EditorFor, a TextBoxFor etc. in a div structure, with
            a LabelFor within an editor-label div, as well as the
            editor as well as a ValidationMessageFor in an editor-
            field div.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.Mvc.HtmlHelpers.FormBlockForHelper.FormBlockFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Web.Mvc.MvcHtmlString)">
            <summary>
            Generate a form block.
            </summary>
            <typeparam name="TModel">Model type.</typeparam>
            <typeparam name="TValue">Value type.</typeparam>
            <param name="helper">HtmlHelper instance.</param>
            <param name="expression">An expression that identifies the property to display.</param>
            <param name="editorBlock">The editor that should be appended to the editor field, e.g. a TextAreaFor.</param>
            <returns>An editor block for the provided property.</returns>
        </member>
        <member name="T:NExtra.Mvc.Localization.LocalizedDataAnnotationsModelMetadataProvider">
            <summary>
             This class can be used instead of the default metadata
             provider. It will auto-translate properties as well as
             error messages that are displayed witin a view.
            </summary>
             <remarks>
             If overrideMode is set to true, already defined values
             for DisplayName and ErrorMessage will be overridden by
             the provider. If overrideMode is set to false, however,
             already defined metadata will be preserved.
             
             The dotReplacement will be used to convert the dots in
             the full name of a class or property. User.UserName is
             by default converted to Domain_User_UserName.
             
             The default key format that is used for DisplayName is:
                 [Type.FullName]_[PropertyName]
                 e.g. MyCoolProject_Domain_User_UserName
             
             For validation attributes, the default key format that
             is used to as ErrorMessage is:
                 [Type.FullName]_[PropertyName]_[AttributeName]
                 e.g. MyCoolProject_Domain_User_UserName_Required
             
             Depending on which translator that is used, these keys
             can be translated in various ways. For instance, using
             the HierarchicalResourceManagerFacade 
             
             Author:     Daniel Saidi [daniel.saidi@gmail.com]
             Link:       http://www.saidi.se/nextra
             </remarks>
        </member>
        <member name="M:NExtra.Mvc.Localization.LocalizedDataAnnotationsModelMetadataProvider.#ctor(NExtra.Localization.Abstractions.ITranslator,System.Boolean,System.String)">
            <summary>
             Create an instance of the class.
            </summary>
            <param name="translator">The ITranslator implementation to use when translating metadata.</param>
            <param name="overrideMode">Whether or not to override already defined metadata.</param>
            <param name="dotReplacement">The separator to use instead of dots.</param>
        </member>
        <member name="M:NExtra.Mvc.Localization.LocalizedDataAnnotationsModelMetadataProvider.GetDisplayNameLanguageKey(System.Type,System.String)">
            <summary>
            Retrieve the language key for the display name for
            a property. This key will be used when translating
            the property displayname with the translator.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyName">The property name.</param>
            <returns>The resulting resource key.</returns>
        </member>
        <member name="M:NExtra.Mvc.Localization.LocalizedDataAnnotationsModelMetadataProvider.GetErrorMessageLanguageKey(System.Type,System.String,System.String)">
            <summary>
            Retrieve the language key for an error message. This
            key will be used when translating a validation error
            message with the translator.
            </summary>
            <param name="type">The type.</param>
            <param name="propertyName">The property name.</param>
            <param name="attributeName">The attribute name.</param>
            <returns>The resulting resource key.</returns>
        </member>
        <member name="M:NExtra.Mvc.Localization.LocalizedDataAnnotationsModelMetadataProvider.HandleDisplayName(System.Web.Mvc.ModelMetadata,System.Type,System.String)">
            <summary>
            Handle the display name of a metadata model.
            </summary>
            <param name="meta">The metadata model to affect.</param>
            <param name="type">The type to translate.</param>
            <param name="propertyName">The name of the property to translate.</param>
        </member>
        <member name="M:NExtra.Mvc.Localization.LocalizedDataAnnotationsModelMetadataProvider.HandleErrorMessage(System.Type,System.String,System.ComponentModel.DataAnnotations.ValidationAttribute)">
            <summary>
            Handle the error message of a validation attribute.
            </summary>
            <param name="type">The type to translate.</param>
            <param name="propertyName">The name of the property to translate.</param>
            <param name="attribute">The validation attribute to affect.</param>
        </member>
        <member name="M:NExtra.Mvc.Localization.LocalizedDataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
            <summary>
            Gets the metadata for the specifie property.
            </summary>
            <param name="attributes">The attributes.</param>
            <param name="containerType">The type of container.</param>
            <param name="modelAccessor">The model accessor.</param>
            <param name="modelType">The model type.</param>
            <param name="propertyName">The property name.</param>
            <returns>The resulting model metadata.</returns>
        </member>
        <member name="P:NExtra.Mvc.Localization.LocalizedDataAnnotationsModelMetadataProvider.DotReplacement">
            <summary>
            The separator to use instead of dots.
            </summary>
        </member>
        <member name="P:NExtra.Mvc.Localization.LocalizedDataAnnotationsModelMetadataProvider.OverrideMode">
            <summary>
            Whether or not the provider will override already defined metadata.
            </summary>
        </member>
        <member name="P:NExtra.Mvc.Localization.LocalizedDataAnnotationsModelMetadataProvider.Translator">
            <summary>
            The ITranslator implementation to use when translating metadata.
            </summary>
        </member>
        <member name="T:NExtra.Mvc.HtmlHelpers.ConditionalHelper">
            <summary>
            This class can be used to return one of two possible
            return, values depending on a boolean expression.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.Mvc.HtmlHelpers.ConditionalHelper.Conditional``1(System.Web.Mvc.HtmlHelper,System.Boolean,``0,``0)">
            <summary>
            Return one of two possible return values, depending on a boolean expression.
            </summary>
            <typeparam name="T">The return type.</typeparam>
            <param name="helper">HtmlHelper instance.</param>
            <param name="expression">Boolean expression.</param>
            <param name="trueResult">The value to return if the expression is true.</param>
            <param name="falseResult">The value to return if the expression is false.</param>
            <returns>The return value.</returns>
        </member>
        <member name="T:NExtra.Mvc.ActionFilters.OutputModelAttribute">
            <summary>
            This action filter can be applied to any action. It
            is triggered by a custom query variable and returns
            the view model as a JSON data.
            
            This attribute can be applied to actions where JSON
            data can help analyzing invalid view models.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.Mvc.ActionFilters.OutputModelAttribute.#ctor(System.String)">
            <summary>
            Create a filter instance that only requires that a
            query string variable with the given name exists.
            </summary>
            <param name="queryVariableName">The query string variable name.</param>
        </member>
        <member name="M:NExtra.Mvc.ActionFilters.OutputModelAttribute.#ctor(System.String,System.String)">
            <summary>
            Create a filter instance that requires that a query
            string variable with a certain value exists.
            </summary>
            <param name="queryVariableName">The query string variable name.</param>
            <param name="queryVariableValue">The required query string variable value.</param>
        </member>
        <member name="M:NExtra.Mvc.ActionFilters.OutputModelAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>
            Override the OnActionExecuted event.
            </summary>
            <param name="filterContext">The current filter context.</param>
        </member>
        <member name="M:NExtra.Mvc.ActionFilters.OutputModelAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext,System.Web.HttpRequestBase)">
            <summary>
            Override the OnActionExecuted event, using a custom HTTP request.
            </summary>
            <param name="filterContext">The current filter context.</param>
            <param name="httpRequest">Custom HTTP request.</param>
        </member>
        <member name="T:NExtra.Mvc.HtmlHelpers.GlobalResourceHelper">
            <summary>
            This helper can be used to work with global resource files.
            
            The helper will automatically adjust resource file values
            for display. For example, line feeds are replaced with br
            tags.
            </summary>
            <remarks>
            Author:     Daniel Saidi [daniel.saidi@gmail.com]
            Link:       http://www.saidi.se/nextra
            </remarks>
        </member>
        <member name="M:NExtra.Mvc.HtmlHelpers.GlobalResourceHelper.GlobalResource(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Adjust a global resource file value for display.
            </summary>
            <param name="helper">HtmlHelper instance.</param>
            <param name="str">The resource file value to adjust.</param>
            <returns>The HTML formatted result.</returns>
        </member>
    </members>
</doc>
